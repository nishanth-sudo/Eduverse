DSA Course
DSA
Interview Questions on Array
Practice Array
MCQs on Array
Tutorial on Array
Types of Arrays
Array Operations
Subarrays, Subsequences, Subsets
Reverse Array
Static Vs Arrays
Array Vs Linked List
Array | Range Queries
Advantages & Disadvantages
Explore GfG Courses
Share Your Experiences
DSA Tutorial - Learn Data Structures and Algorithms
Array Data Structure  Guide
String in Data Structure
Matrix Data Structure
Searching Algorithms
Sorting Algorithms
Hashing in Data Structure
Two Pointers Technique
Sliding Window Technique
Prefix Sum Array - Implementation and Applications
Linked List Data Structure
Stack Data Structure
Queue Data Structure
Recursive Algorithms
Tree Data Structure
Heap Data Structure
Greedy Algorithms
Dynamic Programming or DP
Divide and Conquer Algorithm
Graph  Algorithms
Competitive Programming - A Complete Guide
DSA to DevelopmentCourse
Array Data Structure  GuideLast Updated :13 Apr, 2025CommentsImproveSuggest changesLike ArticleLikeReportIn this article, we introduce array, implementation in different popular languages, its basic operations and commonly seen problems / interview questions.Anarraystores items (in case of C/C++ and Java Primitive Arrays) or their references (in case of Python, JS, Java Non-Primitive) at contiguous locations.It offers mainly the following advantages over other data structures.Random Access:  i-th item can be accessed in O(1) Time as we have the base address and every item or reference is of same size.Cache Friendliness: Since items / references are stored at contiguous locations, we get the advantage of locality of reference.It is not useful in places where we have operations like insert in the middle, delete from middle and search in a unsorted data.It is a fundamental and linear data structure using which we build other data structures like Stack Queue, Deque, Graph, Hash Table, etc.Learn Basics of Array:Introduction to ArraysApplications of ArrayArray in Different Language:Arrays in CVector in C++ STLArrays in JavaArrayList in JavaList in PythonArrays in C#Arrays in JavaScriptBasic Problems on Array:Print AlternatesLinear SearchLargest ElementSecond LargestLargest ThreeLeaders in an arrayCheck if SortedRemove Duplicates from SortedGenerate all SubarraysReverse an ArrayRotate an ArrayZeroes to EndMin Increments to Make EqualMin Cost to Make Size 1Prerequisite for the Remaining ProblemsBinary SearchSelection Sort,Insertion Sort,Binary Search,QuickSort,MergeSort,CycleSort, andHeapSortSort in C++/Sort in Java/Sort in Python/Sort in JavaScriptTwo Pointers TechniquePrefix Sum TechniqueBasics of HashingWindow Sliding TechniqueEasy Problems on Array:Distinct ElementsDuplicate within K DistanceMake Even Positioned GreaterSum of all SubarraysStock Buy and Sell – Multiple TransactionsSingle Among DoublesMissing NumberMissing and RepeatingOnly Repeating from 1 to n-1Sorted Subsequence of Size 3Binary SortStable Binary SortStable Binary Sort with O(1) SpaceSort in Wave FormMax Subarray SumK Concatenation Max Subarray SumMax Subarray ProductEquilibrium indexTwo Sum - Find if there is a PairTwo Sum - Closest Pair[More problems on 2 Sum in Medium Section]Chocolate Distribution ProblemUnion of two arraysIntersection of two arraysUnion of two sorted arraysIntersection of two sorted arraysMediumProblems on Array:Make arr[i] = iSort an array of 1 to nReorder according to given indexesMinimum Swaps to SortMin in a Sorted RotatedMax in a Sorted RotatedRotation Count in Rotated SortedSearch in a Sorted  RotatedNearly Sorted (or K sorted)Product Except SelfK-th Largest Sum SubarraySmallest missing numberSmallest subarray with sum greater than xInversion countMerge Overlapping IntervalsSort an array of 0s, 1s and 2sMerge with O(1) extra spaceMajority ElementPeak elementCount possible trianglesSub-array with given sumLongest Subarray with Equal 0s and 1sLongest Common Span in Two Binary ArraysConstruct an array from its pair-sum array2 Sum - All Pairs2 Sum - Distinct Pairs3 Sum - Find Any3 Sum - Closest Triplet4 Sum - Find Any[More problems on 4 Sum in Hard Section]HardProblems on Array:Surpasser CountTrapping Rain WaterTop K Frequent ElementsKth Missing Positive Number in a Sorted ArrayStock Buy and Sell - At Most K TransactionsStock Buy and Sell - At Most 2 TransactionsMedian in a StreamSmallest Difference Triplet from 3 arraysMax occurred in n ranges3 Sum - Distinct Triplets3 Sum - All Triplets4 Sum - Distinct Quadruples4 Sum - All Quadruples4 Sum - Closest QuadrupleExpert Problems for Competitive ProgrammersMO’s AlgorithmSquare Root (Sqrt) Decomposition AlgorithmSparse TableRange sum query using Sparse TableRange Minimum Query (Square Root Decomposition and Sparse Table)Range LCM QueriesMerge Sort Tree for Range Order StatisticsMinimum number of jumps to reach endSpace optimization using bit manipulationsMax value of Sum( i*arr[i]) with only rotations allowedQuick Links :‘Practice Problems’ on ArraysTop Array Interview Questions‘Quizzes’ on ArraysNext ArticleString in Data StructureHharendrakumar123ImproveArticle Tags :ArraysDSAPractice Tags :Arrays
Array Data Structure  Guide
In this article, we introduce array, implementation in different popular languages, its basic operations and commonly seen problems / interview questions.
Anarraystores items (in case of C/C++ and Java Primitive Arrays) or their references (in case of Python, JS, Java Non-Primitive) at contiguous locations.
It offers mainly the following advantages over other data structures.Random Access:  i-th item can be accessed in O(1) Time as we have the base address and every item or reference is of same size.Cache Friendliness: Since items / references are stored at contiguous locations, we get the advantage of locality of reference.
It is not useful in places where we have operations like insert in the middle, delete from middle and search in a unsorted data.
It is a fundamental and linear data structure using which we build other data structures like Stack Queue, Deque, Graph, Hash Table, etc.
Learn Basics of Array:
Introduction to Arrays
Applications of Array
Array in Different Language:
Arrays in C
Vector in C++ STL
Arrays in Java
ArrayList in Java
List in Python
Arrays in C#
Arrays in JavaScript
Basic Problems on Array:
Print Alternates
Linear Search
Largest Element
Second Largest
Largest Three
Leaders in an array
Check if Sorted
Remove Duplicates from Sorted
Generate all Subarrays
Reverse an Array
Rotate an Array
Zeroes to End
Min Increments to Make Equal
Min Cost to Make Size 1
Prerequisite for the Remaining Problems
Binary Search
Selection Sort,Insertion Sort,Binary Search,QuickSort,MergeSort,CycleSort, andHeapSort
Sort in C++/Sort in Java/Sort in Python/Sort in JavaScript
Two Pointers Technique
Prefix Sum Technique
Basics of Hashing
Window Sliding Technique
Easy Problems on Array:
Distinct Elements
Duplicate within K Distance
Make Even Positioned Greater
Sum of all Subarrays
Stock Buy and Sell – Multiple Transactions
Single Among Doubles
Missing Number
Missing and Repeating
Only Repeating from 1 to n-1
Sorted Subsequence of Size 3
Binary Sort
Stable Binary Sort
Stable Binary Sort with O(1) Space
Sort in Wave Form
Max Subarray Sum
K Concatenation Max Subarray Sum
Max Subarray Product
Equilibrium index
Two Sum - Find if there is a Pair
Two Sum - Closest Pair[More problems on 2 Sum in Medium Section]
Chocolate Distribution Problem
Union of two arrays
Intersection of two arrays
Union of two sorted arrays
Intersection of two sorted arrays
MediumProblems on Array:
Make arr[i] = i
Sort an array of 1 to n
Reorder according to given indexes
Minimum Swaps to Sort
Min in a Sorted Rotated
Max in a Sorted Rotated
Rotation Count in Rotated Sorted
Search in a Sorted  Rotated
Nearly Sorted (or K sorted)
Product Except Self
K-th Largest Sum Subarray
Smallest missing number
Smallest subarray with sum greater than x
Inversion count
Merge Overlapping Intervals
Sort an array of 0s, 1s and 2s
Merge with O(1) extra space
Majority Element
Peak element
Count possible triangles
Sub-array with given sum
Longest Subarray with Equal 0s and 1s
Longest Common Span in Two Binary Arrays
Construct an array from its pair-sum array
2 Sum - All Pairs
2 Sum - Distinct Pairs
3 Sum - Find Any
3 Sum - Closest Triplet
4 Sum - Find Any[More problems on 4 Sum in Hard Section]
HardProblems on Array:
Surpasser Count
Trapping Rain Water
Top K Frequent Elements
Kth Missing Positive Number in a Sorted Array
Stock Buy and Sell - At Most K Transactions
Stock Buy and Sell - At Most 2 Transactions
Median in a Stream
Smallest Difference Triplet from 3 arrays
Max occurred in n ranges
3 Sum - Distinct Triplets
3 Sum - All Triplets
4 Sum - Distinct Quadruples
4 Sum - All Quadruples
4 Sum - Closest Quadruple
Expert Problems for Competitive Programmers
MO’s Algorithm
Square Root (Sqrt) Decomposition Algorithm
Sparse Table
Range sum query using Sparse Table
Range Minimum Query (Square Root Decomposition and Sparse Table)
Range LCM Queries
Merge Sort Tree for Range Order Statistics
Minimum number of jumps to reach end
Space optimization using bit manipulations
Max value of Sum( i*arr[i]) with only rotations allowed
Quick Links :
‘Practice Problems’ on Arrays
Top Array Interview Questions
‘Quizzes’ on Arrays
H
Arrays
DSA
Arrays
Similar Reads
Thank You!
What kind of Experience do you want to share?

[Images saved with this article:]
media.geeksforgeeks.org_img-practice_prod_courses_287_Web_Content_c_1722949071.webp
media.geeksforgeeks.org_img-practice_prod_courses_463_Web_Content_dsa_js_1723009405.webp
media.geeksforgeeks.org_img-practice_prod_courses_826_Web_Content_R_prog_1734086551.webp
media.geeksforgeeks.org_auth-dashboard-uploads_suggestChangeIcon.png
media.geeksforgeeks.org_auth-dashboard-uploads_createImprovementIcon.png