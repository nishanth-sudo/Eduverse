DSA Course
DSA
Practice Sorting
MCQs on Sorting
Tutorial on Sorting
Bubble Sort
Quick Sort
Merge Sort
Insertion Sort
Selection Sort
Heap Sort
Sorting Complexities
Radix Sort
ShellSort
Counting Sort
Bucket Sort
TimSort
Bitonic Sort
Uses of Sorting Algorithm
Explore GfG Courses
Share Your Experiences
Sorting Algorithms
Introduction to Sorting Techniques – Data Structure and Algorithm Tutorials
Most Common Sorting Algorithms
Selection Sort
Bubble Sort Algorithm
Insertion Sort Algorithm
Merge Sort - Data Structure and Algorithms Tutorials
Quick Sort
Heap Sort - Data Structures and Algorithms Tutorials
Counting Sort - Data Structures and Algorithms Tutorials
Radix Sort - Data Structures and Algorithms Tutorials
Bucket Sort - Data Structures and Algorithms Tutorials
Other Sorting Algorithms
Shell Sort
TimSort - Data Structures and Algorithms Tutorials
Comb Sort
Pigeonhole Sort
Cycle Sort
Cocktail Sort
Strand Sort
Bitonic Sort
Pancake sorting
BogoSort or Permutation Sort
Gnome Sort
Sleep Sort – The King of Laziness / Sorting while Sleeping
Stooge Sort
Tag Sort (To get both sorted and original)
Tree Sort
Odd-Even Sort / Brick Sort
Comparison with other Sorting Algorithm
Selection Sort VS Bubble Sort
Difference between Insertion sort and Selection sort
Merge Sort vs. Insertion Sort
Radix Sort vs Bucket Sort
C qsort() vs C++ sort()
sort()  vs.  partial_sort()  vs. nth_element() + sort() in C++ STL
Python - Difference between sorted() and sort()
Easy problems on Sorting algorihtms
Sort elements by frequency
Sort an array of 0s, 1s and 2s - Dutch National Flag Problem
Sort numbers stored on different machines
Sort an array in wave form
Check if any two intervals intersect in a given set
How to sort an array of dates in C/C++?
Sorting Strings using Bubble Sort
Sort an array according to count of set bits
Sort even-placed in increasing and odd-placed in decreasing order
Sort an array when two halves are sorted
Sorting Big Integers
Sort a linked list of 0s, 1s and 2s
Medium problems on Sorting algorithms
Count Inversions of an Array
Count Inversions of an Array
Smallest Subarray to be Sorted to make the whole array sorted
Sort a nearly sorted (or K sorted) array
Sort n numbers in range from 0 to n^2 - 1 in linear time
Sort an array according to the order defined by another array
Find the point where maximum intervals overlap
Find a permutation that causes worst case of Merge Sort
Sort Vector of Pairs in Ascending Order in C++
Minimum swaps to make two arrays consisting unique elements identical
Chocolate Distribution Problem
Permute two arrays such that sum of every pair is greater or equal to K
Bucket Sort To Sort an Array with Negative Numbers
Sort a Matrix in all way increasing order
Convert an Array to reduced form using Vector of pairs
Check if it is possible to sort an array with conditional swapping of adjacent allowed
Hard problem on Sorting algorithms
Surpasser Count of Each Element in Array
Partition into minimum subsets of consecutive numbers
Choose m elements having minimum difference between max and min
K-th smallest element after removing some integers from natural numbers
Maximum difference between frequency of two  such that having greater frequency element is also greater
Minimum swaps to reach permuted array with at most 2 positions left swaps allowed
Check if Array Elemnts can be Made Equal with Given Operations
Sort an array after applying the given equation
Print array of strings in sorted order without copying one string into another
DSA to DevelopmentCourse
Sorting AlgorithmsLast Updated :14 Apr, 2025CommentsImproveSuggest changesLike ArticleLikeReportASorting Algorithmis used to rearrange a given array or list of elements in an order.  For example, a given array [10, 20, 5, 2] becomes [2, 5, 10, 20] after sorting in increasing order and becomes [20, 10, 5, 2] after sorting in decreasing order.There exist different sorting algorithms for different different types of inputs, for example a binary array, a character array, an array with a large range of values or an array with many duplicates or a small vs large array.The algorithms may also differ according to output requirements. For example, stable sorting (or maintains original order of equal elements) or not stable.Sorting is provided in library implementation of most of the programming languages.  These sorting functions typically are general purpose functions with flexibility of providing the expected sorting order (increasing or decreasing or by a specific key in case of objects).Basics of Sorting Algorithms:Introduction to SortingApplications of SortingSorting Algorithms:Comparison Based :Selection Sort,Bubble Sort,Insertion Sort,Merge Sort,Quick Sort,Heap Sort,Cycle Sort,3-way Merge SortNon Comparison Based :Counting Sort,Radix Sort,Bucket Sort,TimSort,Comb Sort,Pigeonhole SortHybrid Sorting Algorithms :IntroSort,Tim SortLibrary Implementations:qsort() in Csort() in C++ STLArrays.sort() in Java with examplesCollections.sort() in Java with ExamplesSort a List in PythonSorting in JavaScriptEasy Problems on Sorting:Check if an array is SortedSort an array of two typesSort a StringSort Each Row of a MatrixSort a MatrixSort a Linked ListSort in Wave FormSort by FrequencySort from Different MachinesCheck if any two intervals overlapMissing elements of a rangeSort by set bits countsSort even and odd placed in different ordersSorting Big IntegersSort strings by lengthsMerge Two Sorted ArraysSort when two halves are sorted2 Sum - Pair in a Sorted ArrayIntersection of two sorted arraysUnion of two sorted arraysMeeting RoomsMedium Problems on Sorting:Minimum Increments to Make UniqueMerge Overlapping IntervalsMinimum PlatformsClosest Pair of ElementsClosest Pair of PointsChocolate Distribution ProblemMin and Max Amount to Buy AllThree Way PartitioningSort an array of 0s, 1s and 2sSort a linked list of 0s, 1s and 2sInversion countK-th Smallest ElementK Smallest Elements3 Sum - Find Any3 Sum - Closest TripletSmallest Difference Triplet from Three arraysMerge K Sorted ArraysMerge K Sorted Linked ListsMin Unsorted Subarray to make array sortedSort a nearly sorted arraySort n numbers in range from 0 to n^2 – 1Sort an array of 1 to nSort according to order defined by anotherMaximum intervals overlapPermutation with worst Case of Merge SortMinimum swaps to make two arrays identicalPermute two arrays such that all pair suns are greater than KBucket Sort To Sort an Array with Negative NumbersConvert an Array to reduced form using Vector of pairsCheck if array can be sorted with conditional swapping of adjacent4 Sum - Find Any[More problems an 4 Sum are in Hard Section]Hard Problems on Sorting:Merge Without Extra SpaceTop K Frequent Elements3 Sum - Distinct Triplets4 Sum - Distinct Quadruples4 Sum - All Quadruples4 Sum - Closest QuadrupleSurpasser Counts in an ArrayCount distinct occurrences as a subsequenceMinimum consecutive number subsetsMinimum swaps for Binary Tree to BSTK-th smallest element after removing some integers from natural numbersMax frequency diff such greater freq item is also is also greaterMin swaps to reach permuted array with at most 2 positions left swaps allowedMaking Array Elements SameSort an array after applying an equationArray of strings in sorted order without copying stringsQuick Links :‘Practice Problems’ on SortingTop Sorting Interview Questions‘Quizzes’ on SortingRecommended:Learn Data Structure and Algorithms | DSA TutorialNext ArticleIntroduction to Sorting Techniques – Data Structure and Algorithm TutorialsHharendrakumar123ImproveArticle Tags :SortingDSAPractice Tags :Sorting
Sorting Algorithms
ASorting Algorithmis used to rearrange a given array or list of elements in an order.  For example, a given array [10, 20, 5, 2] becomes [2, 5, 10, 20] after sorting in increasing order and becomes [20, 10, 5, 2] after sorting in decreasing order.
There exist different sorting algorithms for different different types of inputs, for example a binary array, a character array, an array with a large range of values or an array with many duplicates or a small vs large array.
The algorithms may also differ according to output requirements. For example, stable sorting (or maintains original order of equal elements) or not stable.
Sorting is provided in library implementation of most of the programming languages.  These sorting functions typically are general purpose functions with flexibility of providing the expected sorting order (increasing or decreasing or by a specific key in case of objects).
Basics of Sorting Algorithms:
Introduction to Sorting
Applications of Sorting
Sorting Algorithms:
Comparison Based :Selection Sort,Bubble Sort,Insertion Sort,Merge Sort,Quick Sort,Heap Sort,Cycle Sort,3-way Merge SortNon Comparison Based :Counting Sort,Radix Sort,Bucket Sort,TimSort,Comb Sort,Pigeonhole SortHybrid Sorting Algorithms :IntroSort,Tim Sort
Library Implementations:
qsort() in C
sort() in C++ STL
Arrays.sort() in Java with examples
Collections.sort() in Java with Examples
Sort a List in Python
Sorting in JavaScript
Easy Problems on Sorting:
Check if an array is Sorted
Sort an array of two types
Sort a String
Sort Each Row of a Matrix
Sort a Matrix
Sort a Linked List
Sort in Wave Form
Sort by Frequency
Sort from Different Machines
Check if any two intervals overlap
Missing elements of a range
Sort by set bits counts
Sort even and odd placed in different orders
Sorting Big Integers
Sort strings by lengths
Merge Two Sorted Arrays
Sort when two halves are sorted
2 Sum - Pair in a Sorted Array
Intersection of two sorted arrays
Union of two sorted arrays
Meeting Rooms
Medium Problems on Sorting:
Minimum Increments to Make Unique
Merge Overlapping Intervals
Minimum Platforms
Closest Pair of Elements
Closest Pair of Points
Chocolate Distribution Problem
Min and Max Amount to Buy All
Three Way Partitioning
Sort an array of 0s, 1s and 2s
Sort a linked list of 0s, 1s and 2s
Inversion count
K-th Smallest Element
K Smallest Elements
3 Sum - Find Any
3 Sum - Closest Triplet
Smallest Difference Triplet from Three arrays
Merge K Sorted Arrays
Merge K Sorted Linked Lists
Min Unsorted Subarray to make array sorted
Sort a nearly sorted array
Sort n numbers in range from 0 to n^2 – 1
Sort an array of 1 to n
Sort according to order defined by another
Maximum intervals overlap
Permutation with worst Case of Merge Sort
Minimum swaps to make two arrays identical
Permute two arrays such that all pair suns are greater than K
Bucket Sort To Sort an Array with Negative Numbers
Convert an Array to reduced form using Vector of pairs
Check if array can be sorted with conditional swapping of adjacent
4 Sum - Find Any[More problems an 4 Sum are in Hard Section]
Hard Problems on Sorting:
Merge Without Extra Space
Top K Frequent Elements
3 Sum - Distinct Triplets
4 Sum - Distinct Quadruples
4 Sum - All Quadruples
4 Sum - Closest Quadruple
Surpasser Counts in an Array
Count distinct occurrences as a subsequence
Minimum consecutive number subsets
Minimum swaps for Binary Tree to BST
K-th smallest element after removing some integers from natural numbers
Max frequency diff such greater freq item is also is also greater
Min swaps to reach permuted array with at most 2 positions left swaps allowed
Making Array Elements Same
Sort an array after applying an equation
Array of strings in sorted order without copying strings
Quick Links :
‘Practice Problems’ on Sorting
Top Sorting Interview Questions
‘Quizzes’ on Sorting
Recommended:
Learn Data Structure and Algorithms | DSA Tutorial
H
Sorting
DSA
Sorting
Similar Reads
Thank You!
What kind of Experience do you want to share?

[Images saved with this article:]
media.geeksforgeeks.org_img-practice_prod_courses_198_Web_Content_dsa_1723009292.webp
media.geeksforgeeks.org_img-practice_prod_courses_463_Web_Content_dsa_js_1723009405.webp
media.geeksforgeeks.org_img-practice_prod_courses_261_Web_Content_dspy_1723008711.webp
media.geeksforgeeks.org_auth-dashboard-uploads_suggestChangeIcon.png
media.geeksforgeeks.org_auth-dashboard-uploads_createImprovementIcon.png