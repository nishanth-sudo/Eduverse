CSS - Home
CSS - Roadmap
CSS - Introduction
CSS - Syntax
CSS - Inclusion
CSS - Types
CSS - Measurement Units
CSS - Selectors
CSS - Colors
CSS - Backgrounds
CSS - Fonts
CSS - Text
CSS - Images
CSS - Links
CSS - Tables
CSS - Borders
CSS - Border Block
CSS - Border Inline
CSS - Margins
CSS - Lists
CSS - Padding
CSS - Cursor
CSS - Outlines
CSS - Dimension
CSS - Scrollbars
CSS - Inline Block
CSS - Dropdowns
CSS - Visibility
CSS - Overflow
CSS - Clearfix
CSS - Float
CSS - Arrows
CSS - Resize
CSS - Quotes
CSS - Order
CSS - Position
CSS - Hyphens
CSS - Hover
CSS - Display
CSS - Focus
CSS - Zoom
CSS - Translate
CSS - Height
CSS - Hyphenate Character
CSS - Width
CSS - Opacity
CSS - Z-Index
CSS - Bottom
CSS - Navbar
CSS - Overlay
CSS - Forms
CSS - Align
CSS - Icons
CSS - Image Gallery
CSS - Comments
CSS - Loaders
CSS - Attr Selectors
CSS - Combinators
CSS - Root
CSS - Box Model
CSS - Counters
CSS - Clip
CSS - Writing Mode
CSS - Unicode-bidi
CSS - min-content
CSS - All
CSS - Inset
CSS - Isolation
CSS - Overscroll
CSS - Justify Items
CSS - Justify Self
CSS - Tab Size
CSS - Pointer Events
CSS - Place Content
CSS - Place Items
CSS - Place Self
CSS - Max Block Size
CSS - Min Block Size
CSS - Mix Blend Mode
CSS - Max Inline Size
CSS - Min Inline Size
CSS - Offset
CSS - Accent Color
CSS - User Select
CSS - Cascading
CSS - Universal Selectors
CSS - ID Selectors
CSS - Group Selectors
CSS - Class Selectors
CSS - Child Selectors
CSS - Element Selectors
CSS - Descendant Selectors
CSS - General Sibling Selectors
CSS - Adjacent Sibling Selectors
CSS Advanced
CSS - Grid
CSS - Grid Layout
CSS - Flexbox
CSS - Visibility
CSS - Positioning
CSS - Layers
CSS - Pseudo Classes
CSS - Pseudo Elements
CSS - @ Rules
CSS - Text Effects
CSS - Paged Media
CSS - Printing
CSS - Layouts
CSS - Validations
CSS - Image Sprites
CSS - Important
CSS - Data Types
CSS3 Advanced Features
CSS - Rounded Corner
CSS - Border Images
CSS - Multi Background
CSS - Color
CSS - Gradients
CSS - Box Shadow
CSS - Box Decoration Break
CSS - Caret Color
CSS - Text Shadow
CSS - Text
CSS - 2d transform
CSS - 3d transform
CSS - Transition
CSS - Animation
CSS - Multi columns
CSS - Box Sizing
CSS - Tooltips
CSS - Buttons
CSS - Pagination
CSS - Variables
CSS - Media Queries
CSS - Functions
CSS - Math Functions
CSS - Masking
CSS - Shapes
CSS - Style Images
CSS - Specificity
CSS - Custom Properties
CSS Responsive
CSS RWD - Introduction
CSS RWD - Viewport
CSS RWD - Grid View
CSS RWD - Media Queries
CSS RWD - Images
CSS RWD - Videos
CSS RWD - Frameworks
CSS References
CSS Interview Questions
CSS Online Quiz
CSS Online Test
CSS Mock Test
CSS - Quick Guide
CSS - Cheatsheet
CSS - Properties References
CSS - Functions References
CSS - Color References
CSS - Web Browser References
CSS - Web Safe Fonts
CSS - Units
CSS - Animation
CSS Tools
CSS - PX to EM converter
CSS - Color Chooser & Animation
CSS Resources
CSS - Useful Resources
CSS - Discussion
Selected Reading
UPSC IAS Exams Notes
Developer's Best Practices
Questions and Answers
Effective Resume Writing
AI Based Resume Builder
Personal AI Study Assistant
Generate Coding Logic
HR Interview Questions
Computer Glossary
Who is Who
CSS Tutorial
ThisCSS tutorialcovers everything from basic styling concepts and selectors to advanced techniques, such as flexbox, grid, animations, and CSS variables. ThisCSS tutorialis designed to help both beginners and experienced designers to make them masters in creating visually appealing, responsive, and modern web designs.
What is CSS
CSSis the acronym for"Cascading Style Sheet". It's a style sheet language used for describing the presentation of a document written in a markup language likeHTML. CSS helps the web developers to control the layout and other visual aspects of the web pages. CSS plays a crucial role in modern web development by providing the tools necessary to create visually appealing, accessible, and responsive websites.
CSS Versions
Since the inception of CSS, several versions have came into existence. Some of the notable versions include:
CSS1 (Cascading Style Sheets Level1)- The initial version of CSS, released in December 1996. CSS1 provided basic styling capabilities for HTML documents, including properties for text, colors, backgrounds, margins, and borders.
CSS2 (Cascading Style Sheets Level2)- Released in May 1998, CSS2 introduced new features such as positioning, z-index, media types, and more advanced selectors like attribute selectors and child selectors.
CSS2.1- The version 2.1, published as a W3C Recommendation in June 2011, clarified and refined CSS2, addressing inconsistencies and ambiguities in the specification. CSS2.1 focused on improving interoperability among web browsers.
CSS3 (Cascading Style Sheets Level 3)- CSS3 is a collection of modules that extend the capabilities of CSS. It introduces numerous new features and enhancements, including advanced selectors, multiple column layouts, animations, transformations, gradients, shadows, and more.
CSS4 (Cascading Style Sheets Level 4)- CSS4 is an ongoing effort to extend CSS3 with new features and enhancements.
Each version of CSS builds upon the previous ones, adding new features and refining existing capabilities to meet the evolving needs of web developers and designers. CSS is referred as just CSS now, without a version number.
Types of CSS
Inline CSS: Inline CSS is applied directly to an HTML element using thestyle attribute. It has the highest priority among the three methods.Example<p style="color: blue; font-size: 16px;">
  This line is an inline-styled paragraph.
</p>
<p style="color: blue; font-size: 16px;">
  This line is an inline-styled paragraph.
</p>
Internal CSS: Internal CSS is defined within the<style> taginside the<head>section of an HTML document.Example<head>
  <style>
    p { color: green; font-size: 18px; }
  </style>
</head>
<body>
  <p>This line is styled using internal CSS.</p>
</body>
<head>
  <style>
    p { color: green; font-size: 18px; }
  </style>
</head>
<body>
  <p>This line is styled using internal CSS.</p>
</body>
External CSS: External CSS is written in a separate.cssfile and linked to the HTML document using the<link> tag. This is the recommended method for large projects as it improves maintainability.Example<!-- HTML file -->
<head>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <p>This line is styled using external CSS.</p>
</body>/* styles.css */
p { color: red; font-size: 20px; }
<!-- HTML file -->
<head>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <p>This line is styled using external CSS.</p>
</body>
/* styles.css */
p { color: red; font-size: 20px; }
Advantages of Using CSS
Responsive design- CSS offers features like media queries that enable developers to create responsive layouts that adapt to different screen sizes and devices, ensuring a consistent user experience.
Flexibility and Control- CSS provides precise control over the presentation ofHTML elements, allowing developers to customize layout, typography, colors, and other visual properties.
Consistency and Reusability- Developers can ensure consistency across the entire website, by defining styles in a central CSS file. Styles can be reused across multiple pages, reducing redundancy and making updates easier.
Search Engine Optimization (SEO)- CSS can be used to structure content in a way that improves search engine visibility.
Ease of Maintenance- Centralized CSS files make it easier to maintain and update styles across a website. Changes can be applied globally, ensuring uniformity and reducing the risk of inconsistencies.
Faster Page Loading- External CSS files can be cached by browsers, resulting in faster page loading times for subsequent visits to a website. This caching mechanism reduces server load and bandwidth consumption.
Components of CSS
CSS works by associating rules with HTML elements. A CSS rule contains two main parts:
aselectorwhich specifies the HTML element(s) to style.
adeclaration blockwhich contains one or more declarations separated by semicolons.
Each declaration includes aproperty nameand avalue, specifying the aspect of the element's presentation to control.
CSS Example
Just to give you a little excitement about CSS, here is a sample CSS snippet for your reference.
<html>
<head>
   <title>CSS Tutorial</title>
   <style>
      h1 {
         color: #36CFFF; 
      }

      p {
         font-size: 1.5em;
         color: white;
      }

      div {
         border: 5px inset gold;
         background-color: black;
         width: 300px;
         text-align: center;
      }
   </style>
</head>	
<body>
   <div>
      <h1>Hello World!</h1>
      <p>This is a sample CSS code.</p>
   </div>
</body>	
</html>
In the above CSS snippet:
h1, p,anddivare the selectors that target the<h1>, <p>, and<div>elements.
color, font-size, border, background-color, width,andtext-alignare the properties.
#36CFFF, 1.5em, white, 5px inset gold, black, 300px,andcenterare the corresponding values passed to these properties.
For a quick glance of CSS properties and features, check ourCSS Referencepage.
Getting Started with CSS
Below listed topics are most important to learn in CSS from basics to advance, after completing these topics you will able to style your HTML document as you want. We highly recommend you to do practice with CSS by modifying the provided code in this tutorial.
CSS Basics
Understanding the basics is important whenever you are learning something new. So before diving deep into CSS please know fundamentals of CSS.
CSS Introduction
CSS Syntax
CSS Selectors
CSS Inclusion
CSS Comments
CSS Properties
CSS properties and selectors are the main thing in CSS, without the properties there is no ways to define the styling of any HTML element. So better to know most frequently used properties in one go will help you to work with CSS.
CSS Background
CSS Border
CSS Display
CSS Float
CSS Font
CSS Line Height
CSS Margin
CSS Opacity
CSS Overflow
CSS Padding
CSS Position
CSS Align
CSS White Space
CSS Width
CSS Height
CSS Outline
CSS Visibility
CSS Counter
You can get complete list ofCSS Propertieson the attached link.
CSS Advanced
After completing the above two section you can proceed with the advance part of this tutorial, these topics will helps you to make an actual website layout.
CSS Animation
CSS Gradient
CSS Transition
CSS Tooltips
CSS Arrow
CSS Grid
CSS FlexBox
CSS Responsive Design
CSS @Media Query
CSS 2D Transforms
CSS 3D Transforms
CSS Pseudo Classes
CSS Practice
The following are some of the important links to practice CSS:
CSS Interview Questions
CSS Online Quiz
CSS Online Test
CSS Mock Test
CSS Cheatsheet
Prerequisites to Learn CSS
Before using CSS extensively, it is essential to have a baisc understanding of the following prerequisites:
HTML- A fundamental understanding of HTML markup is necessary. This includes knowledge of HTML elements, attributes, tags, and their hierarchical structure.
Text Editors or Integrated Development Environments (IDEs)- In order to write to write your CSS code, a text editor or an IDE is required. Popular choices include Visual Studio Code, Sublime Text, Atom, or integrated editors within IDEs like IntelliJ IDEA or Eclipse.
Browser Developer Tools- Familiarizing yourself with browser developer tools can help you understand how styles are applied and troubleshoot layout issues.
Basic Environment Setup- Basic understanding of creating and managing files, along with saving and organizing them on your computer.
If you are new to HTML and XHTML, then we would suggest you to go through our HTML or XHTML Tutorial first.
Target Audience: Who Should Learn CSS?
This tutorial has been prepared for beginners and professionals to help them understand the basics to advanced concepts of CSS. After completing this tutorial, you will find yourself at a great level of expertise in CSS, from where you can take your web design skills to the next level.
Frequently Asked Questions about CSS
There are some very Frequently Asked Questions(FAQ) about CSS, this section tries to answer them briefly.
CSS stand for Cascading Style Sheet.
CSS are used to style or decorate the web pages, it will help you to create a beautiful website. CSS specify how an HTML element should be displayed on the web page. If you think of the human body as a web page then CSS is styling part of the body.
Yes, there are CSS frameworks which can be used as an alternative of CSS. But you can not replace the main CSS without having knowledge of basic CSS.
The current version of CSS is 3.0 but CSS 4.0 is an ongoing effort to extend CSS3 with new features and enhancements.
Yes, CSS can't provide maximum security, or you can say the purpose is not to provide that kind of security for your website. Lots of browsers required different properties for the same functionality(cross-browser issue).

[Images saved with this article:]
www.tutorialspoint.com_css_images_css-mini-logo.jpg
www.tutorialspoint.com_css_images_css.jpg